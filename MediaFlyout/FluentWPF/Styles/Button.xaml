<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MediaFlyout.FluentWPF"
                    xmlns:animation="clr-namespace:MediaFlyout.FluentWPF.Animations"
                    xmlns:converters="clr-namespace:MediaFlyout.FluentWPF.Converters">
    <local:RelativePositionConverter x:Key="RelativePositionConverter" />
    <converters:RectConverter x:Key="RectConverter" />

    <Style x:Key="ButtonRevealStyle" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource SystemBaseHighColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource FluentButtonBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SystemBaseMediumHighColorBrush}" />
        <Setter Property="BorderThickness" Value="1.1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="local:RevealElement.MouseOverForeground" Value="{DynamicResource SystemBaseHighColorBrush}" />
        <Setter Property="local:RevealElement.MouseOverBackground" Value="{DynamicResource FluentButtonHoverBackgroundBrush}" />
        <Setter Property="local:RevealElement.MouseOverBorderOpacity" Value="0.3" />
        <Setter Property="local:RevealElement.PressBorderOpacity" Value="0" />
        <Setter Property="local:RevealElement.PressTintBrush" Value="#10FFFFFF" />
        <Setter Property="local:RevealElement.BorderRadius" Value="{DynamicResource FluentButtonRadius}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform x:Name="RootTransform" ScaleX="1" ScaleY="1" />
                        </Grid.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.0" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="0" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="0" Duration="0:0:0.200">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                         To="200" Duration="0:0:0.200">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="backgroundBorder"
                                                         To="0.5" Duration="0:0:0.600">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="1" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressLight"
                                                         To="0" BeginTime="0:0:0.150" Duration="0:0:1.500">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                         From="100" To="50" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusX)" Storyboard.TargetName="brush"
                                                         To="200" BeginTime="0:0:0.150" Duration="0:0:1.500">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                         From="100" To="50" Duration="0:0:0.100">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="(RadialGradientBrush.RadiusY)" Storyboard.TargetName="brush"
                                                         To="200" BeginTime="0:0:0.150" Duration="0:0:1.500">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Offset" Storyboard.TargetName="offset"
                                                         To="0" Duration="0:0:0.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Offset" Storyboard.TargetName="offset"
                                                         From="0" To="0.8" BeginTime="0:0:0.150" Duration="0:0:1.500">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="brush"
                                                         To="0" BeginTime="0:0:0.200" Duration="0:0:2.000">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="background" Background="{TemplateBinding Background}"
                                CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"/>
                        <Border x:Name="pressTintLayer"
                                Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.PressTintBrush)}"
                                CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"
                                Visibility="Hidden"/>
                        <Border x:Name="backgroundBorder"
                                Visibility="{DynamicResource FluentRevealEffectsVisibility}"
                                Opacity="0"
                                CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}">
                            <Grid ClipToBounds="True">
                                <Border x:Name="mouseoverLight" Background="{local:RevealBrush Color=White, Size = 300,Opacity=0.1}"
                                        CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"/>
                                <Rectangle x:Name="pressLight" >
                                    <Rectangle.Clip>
                                        <RectangleGeometry RadiusX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"
                                                           RadiusY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}">
                                            <RectangleGeometry.Rect>
                                                <MultiBinding Converter="{StaticResource RectConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="ActualWidth"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="ActualHeight"/>
                                                </MultiBinding>
                                            </RectangleGeometry.Rect>
                                        </RectangleGeometry>
                                    </Rectangle.Clip>
                                    <Rectangle.Fill>
                                        <RadialGradientBrush x:Name="brush" MappingMode="Absolute" RadiusY="200" RadiusX="200">
                                            <RadialGradientBrush.Center>
                                                <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.Center>
                                            <RadialGradientBrush.GradientOrigin>
                                                <MultiBinding Converter="{StaticResource RelativePositionConverter}">
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.RootObject)"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}"/>
                                                    <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Rectangle}}" Path="(local:PointerTracker.Position)" />
                                                </MultiBinding>
                                            </RadialGradientBrush.GradientOrigin>
                                            <GradientStop Color="{DynamicResource FluentButtonRevealEffectColor}" Offset="0"/>
                                            <GradientStop x:Name="offset" Color="#88FFFFFF" Offset="0.5"/>
                                            <GradientStop Color="Transparent" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </Border>

                        <!-- Content -->
                        <Border BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter.RenderTransform>
                                    <ScaleTransform x:Name="ContentTransform" ScaleX="1" ScaleY="1" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                        </Border>

                        <!-- MouseOver border -->
                        <Grid x:Name="border">
                            <Border x:Name="borderMouseOver"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Opacity="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderOpacity)}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"/>

                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    OpacityMask="{local:RevealBrush Color=White,Size=70,Opacity=0.3}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.BorderRadius)}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="background" Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.MouseOverBackground)}"/>
                            <Setter TargetName="contentPresenter" Property="TextBlock.Foreground"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.MouseOverForeground)}"/>
                            <Setter TargetName="borderMouseOver" Property="Opacity"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.MouseOverBorderOpacity)}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="pressTintLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="borderMouseOver" Property="Opacity"
                                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=(local:RevealElement.PressBorderOpacity)}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="RootTransform" From="1" To="0.95" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="RootTransform" From="1" To="0.95" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentTransform" From="1" To="0.95" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentTransform" From="1" To="0.95" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="RootTransform" From="0.95" To="1" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="RootTransform" From="0.95" To="1" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentTransform" From="0.95" To="1" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentTransform" From="0.95" To="1" Duration="0:0:0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource FluentButtonDisabledForegroundColor}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="border" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>